#!/bin/bash

testsetup_session_paramstobody() {
    local target=${FUNCNAME##*${setup_prefix}} ; debugMessage "SETUP TARGET: $target"
    runAction $target< <(vmCreateJson test-paramstobody)
}

testsetup_session_request() {
    local target=${FUNCNAME##*${setup_prefix}} ; debugMessage "SETUP TARGET: $target"
    promptEndpoint
    local arguments="$selectedendpoint $selectedendpointparams"
    runAction $target $arguments
    setActionResult $target $result
}

testsetup_session_requestjson() {
    local target=${FUNCNAME##*${setup_prefix}} ; debugMessage "SETUP TARGET: $target"
    promptEndpoint
    local arguments="$selectedendpoint $selectedendpointparams"
    runAction $target $arguments
    setActionResult $target $result
}

testsetup_session_get() {
    local target=${FUNCNAME##*${setup_prefix}} ; debugMessage "SETUP TARGET: $target"
    promptEndpoint
    local arguments="$selectedendpoint $selectedendpointparams"
    runAction $target $arguments
    setActionResult $target $result
}

testsetup_session_getjson() {
    local target=${FUNCNAME##*${setup_prefix}} ; debugMessage "SETUP TARGET: $target"
    promptEndpoint
    local arguments="$selectedendpoint $selectedendpointparams"
    runAction $target $arguments
    setActionResult $target $result
}

testsetup_session_post() {
    local target=${FUNCNAME##*${setup_prefix}} ; debugMessage "SETUP TARGET: $target"

    cat<<EOF
For the following tests I will create a test pool using POST requests,
then add and remove VMs to/from the pool using PUT, and finally DELETE the pool.

You can enter a name for this pool or use the default name
EOF

    local line
    read -t 20 -p "Enter a name for the test pool ($selectedpool) " line
    [[ -n "$line" ]] && selectedpool="$line"

    local arguments="$selectedpool"
    runAction $target $arguments
    setActionResult $target $result
}

testsetup_session_put() {
    local target=${FUNCNAME##*${setup_prefix}} ; debugMessage "SETUP TARGET: $target"
    local flags arguments="$selectedpool"
    for vmid in "${!vms[@]}"; do
        flags="-vmid ${vmid}"
        runAction $flags $target $arguments
        result=$?
        setActionResult $target $result
        (( result )) && break
    done
 
    return $result
}

testsetup_session_delete() {
    local target=${FUNCNAME##*${setup_prefix}} ; debugMessage "SETUP TARGET: $target"
    local arguments="$selectedpool"
    runAction $target $arguments
    setActionResult $target $result
}
